1。单例
确保一个类只有一个实例，并且提供该实例的全局访问点
使用一个私有构造函数、一个私有静态变量以及一个公有静态函数来实现。
私有构造函数保证了不能通过构造函数来创建对象实例，只能通过公有静态函数返回唯一的私有静态变量。
（1）懒汉式 线程不安全
（2）饿汉式 线程安全
（3）懒汉式 线程安全
（4）双重校验锁 线程安全
（5）静态内部类
（6）枚举


2.简单工厂模式
在创建一个对象时不向客户暴露内部细节，并提供一个创建对象的通用接口。
简单工厂把实例化的操作单独放到一个类中，这个类就成为简单工厂类，让简单工厂类来决定应该用哪个具体子类来实例化。
这样做能把客户类和具体子类的实现解耦，客户类不再需要知道有哪些子类以及应当实例化哪个子类。
客户类往往有多个，如果不使用简单工厂，那么所有的客户类都要知道所有子类的细节。而且一旦子类发生改变，例如增加子类，那么所有的客户类都要进行修改。

3.工厂方法
定义了一个创建对象的接口，但由子类决定要实例化哪个类。工厂方法把实例化操作推迟到子类。


4.抽象工厂
提供一个接口，用于创建 相关的对象家族 。

5.生成器
封装一个对象的构造过程，并允许按步骤构造。

6.原型模式
使用原型实例指定要创建对象的类型，通过复制这个原型来创建新对象。